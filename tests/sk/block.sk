var result = 0
class A
  def self.one(f: Fn1<Int,Int>) -> Int
    f(1)
  end
end

# TODO #172
#A.one do |i: Int| result = 2 end
#unless result == 2; puts "do/oneline"; end
#
#A.one do |i: Int|
#  putd i
#  result = 3
#end
#unless result == 3; puts "do/multiline"; end

result = A.one do |i: Int| i + 1 end
unless result == 2; puts "assignment rhs/do/oneline"; end

result = A.one{|i: Int| i + 1}
unless result == 2; puts "assignment rhs/brace/oneline"; end

result = A.one do |i: Int|
  i + 1
end
unless result == 2; puts "assignment rhs/do/multiline"; end

result = A.one{|i: Int|
  i + 1
}
unless result == 2; puts "assignment rhs/brace/multiline"; end

# Should pass type check (#426)
class B
  def foo(g: Fn1<Int, Int>)
    bar(){
      let z = Some<Int>.new(0)
      z.map{|x| g(x + 1)}
    }
  end
  def bar(f: Fn0<Maybe<Int>>); end
end

# Should pass type check (#452)
class C
  def self.foo -> Array<C>
    "aaa".lines.map{|l|
      C.new
    }
  end
end

puts "ok"
