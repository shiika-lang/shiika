require "./readable.sk"

class File : Readable
  # def self.read(path: String) -> Result<String>

  # def self.write(path: String, content: String) -> Result<Void>

  def self.open<V>(path: String, f: Fn1<File,V>) -> Result<V>
    let file = File._open(path).try!
    let v = f(file)
    #file.close
    Ok.new(v)
  end
  
  # TODO: will we need this?
  # def close

  def fill_buf -> Result<String>
    _fill_buf
  end

  def consume(n_bytes: Int)
    _consume(n_bytes)
  end
end
