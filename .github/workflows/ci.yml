name: CI

on:
  - push
  - pull_request

jobs:
  # Run unit tests
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up the Linux env
        run: |
          set -eux
          sudo apt install -y libgc-dev

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: llvm-16.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "16.0"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Output versions
        run: |
          set -eux
          rustc --version
          cargo --version
          clang --version

      - name: Build and test
        run: |
          set -eux
          cd lib/skc_rustlib; cargo build; cd ../../
          env -- cargo run -- build-corelib
          env -- cargo test
          env -- bash release_test.sh

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
